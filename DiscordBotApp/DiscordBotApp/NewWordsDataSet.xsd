<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NewWordsDataSet" targetNamespace="http://tempuri.org/NewWordsDataSet.xsd" xmlns:mstns="http://tempuri.org/NewWordsDataSet.xsd" xmlns="http://tempuri.org/NewWordsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NewWordsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NewWordsConnectionString (Settings)" PropertyReference="ApplicationSettings.DiscordBotApp.Properties.Settings.GlobalReference.Default.NewWordsConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordsTableAdapter" GeneratorDataComponentClassName="WordsTableAdapter" Name="Words" UserDataComponentName="WordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewWordsConnectionString (Settings)" DbObjectName="Words" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Words` WHERE ((`Word` = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Words` (`Word`, `Synonyms`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Synonyms" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="Synonyms" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Word, Synonyms FROM Words</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Words` SET `Word` = ?, `Synonyms` = ? WHERE ((`Word` = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Synonyms" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="Synonyms" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings />
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NewWordsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="NewWordsDataSet" msprop:Generator_UserDSName="NewWordsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Words" msprop:Generator_TableClassName="WordsDataTable" msprop:Generator_TableVarName="tableWords" msprop:Generator_TablePropName="Words" msprop:Generator_RowDeletingName="WordsRowDeleting" msprop:Generator_RowChangingName="WordsRowChanging" msprop:Generator_RowEvHandlerName="WordsRowChangeEventHandler" msprop:Generator_RowDeletedName="WordsRowDeleted" msprop:Generator_UserTableName="Words" msprop:Generator_RowChangedName="WordsRowChanged" msprop:Generator_RowEvArgName="WordsRowChangeEvent" msprop:Generator_RowClassName="WordsRow">
          <xs:complexType>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>